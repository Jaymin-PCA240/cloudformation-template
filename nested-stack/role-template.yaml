AWSTemplateFormatVersion: "2010-09-09"
Description: IAM Roles Nested Stack

Parameters:
  GitHubConnectionArn:
    Type: String
    Description: ARN of existing CodeStar GitHub connection
  BackendDbSecret:
    Type: String

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Retain

  # CodePipeline Role with minimal permissions + codeconnections:UseConnection
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeConnectionsUsagePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codeconnections:UseConnection
                  - codestar-connections:UseConnection
                Resource:
                  - !Ref GitHubConnectionArn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
          
  # IAM Role for EC2 Instance (CodeDeploy)
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy  
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SecretsManagerAccess
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: 
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*"
                  - !Ref BackendDbSecret

  EC2InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Roles:
          - !Ref EC2InstanceRole

   # CodeBuild Role ( CodeBuild access)
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:ap-south-1:127145910156:log-group:/aws/codebuild/*
        - PolicyName: S3PipelineArtifactAccess  # <-- NEW policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketLocation
                  - s3:PutObject
                Resource:
                  - !Sub "arn:aws:s3:::${PipelineArtifactBucket}/*"

  # CodeDeploy Service Role
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodePipelineRoleFE:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodePipelineRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: CodePipelineInlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: UseCodeBuild
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"
              - Sid: CodeStarConnection
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                  - codeconnections:UseConnection
                Resource: !Ref GitHubConnectionArn
              - Sid: CloudFrontInvalidate
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodeBuildRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildBasicPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/codebuild/*
              - Sid: ReadSourceIfNeeded
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketLocation
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub "${PipelineArtifactBucket.Arn}/*"
                  - !GetAtt PipelineArtifactBucket.Arn
              - Sid: CloudFrontInvalidation
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"

Outputs:
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: CodePipelineRoleArn

  CodePipelineRoleFEArn:
    Value: !GetAtt CodePipelineRoleFE.Arn
    Export:
      Name: CodePipelineRoleFEArn

  EC2InstanceProfileName:
    Value: !Ref EC2InstanceProfile
    Export:
      Name: EC2InstanceProfileName
  
  PipelineArtifactBucketName:
    Value: !Ref PipelineArtifactBucket
    Export:
      Name: PipelineArtifactBucketName

  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
    Export:
      Name: CodeBuildRoleArn

  CodeDeployServiceRoleArn:
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: CodeDeployServiceRoleArn

  CodeBuildServiceRoleArn:
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: CodeBuildServiceRoleArn