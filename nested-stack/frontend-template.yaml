AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Frontend CI/CD pipeline:
    GitHub (CodeStarConnection) -> CodeBuild -> ManualApproval -> Deploy to S3 (private) -> CloudFront (OAC)

Parameters:
  GitHubRepo:
    Type: String
    Description: "GitHub repository in owner/repo format"
  GitHubBranch:
    Type: String
    Description: "Branch to build"
  GitHubConnectionArn:
    Type: String
    Description: "ARN of CodeStar Connections connection (GitHub)"
  CloudFrontDefaultRootObject:
    Type: String
    Default: index.html
    Description: "CloudFront default root object"
  BackendApiUrl:
    Type: String
    Description: "Backend API URL for Frontend"
  PipelineArtifactBucketName:
    Type: String
  CodePipelineRoleFEArn:
    Type: String
  CodeBuildServiceRoleArn:
    Type: String

Resources:

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Retain

  FrontendOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AWS::StackName}-OAC"
        Description: "OAC for CloudFront to access S3 bucket"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: !Ref CloudFrontDefaultRootObject
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !Ref FrontendOAC
          # ALB Backend API
          - Id: ALBOrigin
            DomainName: !Ref BackendApiUrl
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6     # Managed CachingOptimized
        CacheBehaviors:
          - PathPattern: "/api/*"
            TargetOriginId: ALBOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachedMethods:
              - GET
              - HEAD
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # Managed-AllViewerExceptHostHeader
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontGetObject
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${FrontendBucket.Arn}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${FrontendDistribution}"

  FrontendCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-FrontendBuild"
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: API_BASE_URL
            Value: !Ref BackendApiUrl
            Type: PLAINTEXT

      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  CloudFrontInvalidationProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-CloudFrontInvalidation"
      ServiceRole: !Ref CodeBuildServiceRoleArn
      Artifacts:
        Type: CODEPIPELINE   # must be CODEPIPELINE when Source.Type is CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CLOUDFRONT_ID
            Value: !Ref FrontendDistribution
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo "Invalidating CloudFront cache..."
                - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
      TimeoutInMinutes: 10

  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AWS::StackName}-FrontendPipeline"
      RoleArn: !Ref CodePipelineRoleFEArn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Ref GitHubRepo
                BranchName: !Ref GitHubBranch
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref FrontendCodeBuild
        - Name: Approval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: "Manual approval required before deploying to S3/CloudFront"
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                BucketName: !Ref FrontendBucket
                Extract: true
              RunOrder: 1
            - Name: InvalidateCloudFront
              ActionTypeId:
                Category: Build       
                Owner: AWS
                Provider: CodeBuild  
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CloudFrontInvalidationProject
              RunOrder: 2

Outputs:
  FrontendBucketName:
    Description: "Auto-generated S3 bucket name for frontend"
    Value: !Ref FrontendBucket

  CloudFrontDomain:
    Description: "CloudFront distribution domain"
    Value: !GetAtt FrontendDistribution.DomainName

  PipelineName:
    Description: CodePipeline name
    Value: !Ref FrontendPipeline
