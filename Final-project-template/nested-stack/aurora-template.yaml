AWSTemplateFormatVersion: "2010-09-09"
Description: "Nested Stack — Aurora MySQL Cluster"

Parameters:
  VpcId:
    Type: String
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  DBUsername:
    Type: String
    Default: admin
  DBPassword:
    Type: String
    NoEcho: true
  DatabaseName:
    Type: String
    Default: tododb
  UsePublicSubnets:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Aurora Subnet Group"
      SubnetIds: !Ref SubnetIds

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Aurora DB SG"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0   # ⚠️ For demo only! Later restrict to backend SG

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineVersion: "8.0.mysql_aurora.3.05.2"
      DBClusterIdentifier: my-aurora-cluster
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      DatabaseName: !Ref DatabaseName
      VpcSecurityGroupIds:
        - !Ref DBSecurityGroup
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      DeletionProtection: false
      # SkipFinalSnapshot: true # do not create final snapshot

  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.t3.medium
      Engine: aurora-mysql
      PubliclyAccessible: !If [ UsePublicSubnetCondition, true, false ]

Conditions:
  UsePublicSubnetCondition: !Equals [ !Ref UsePublicSubnets, "true" ]

Outputs:
  DBEndpoint:
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: AuroraEndpoint
