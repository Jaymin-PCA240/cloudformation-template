AWSTemplateFormatVersion: "2010-09-09"
Description: "Roles for ECS Deployment â€” Supports both Direct ECS Deploy and ECS via CodeDeploy (least privilege, no missing perms)."

Parameters:
  ArtifactBucketName:
    Type: String
    Default: cicd-asg-pipelineartifactbucket-xp5oa3woeztb
  CodeStarConnectionArn:
    Type: String
    Default: arn:aws:codeconnections:ap-south-1:127145910156:connection/1db5596b-8712-48b6-aad2-062695c51177
  CodeBuildProjectArn:
    Type: String
    Default: arn:aws:codebuild:ap-south-1:127145910156:project/NodeAppBuild
  DeploymentType:
    Type: String
    AllowedValues:
      - DirectECS
      - CodeDeployECS

Resources:

  # ---------------------------
  # CodePipeline Role
  # ---------------------------
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        # 1. Source from CodeStar
        - PolicyName: CodePipelineSourceAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: codestar-connections:UseConnection
                Resource: !Ref CodeStarConnectionArn

        # 2. Artifact S3
        - PolicyName: CodePipelineArtifactS3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucketName}
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*

        # 3. Build permissions
        - PolicyName: CodePipelineCodeBuild
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: !Ref CodeBuildProjectArn
              - Effect: Allow
                Action:
                  - logs:GetLogEvents
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*

        # 4. ECS or CodeDeploy deploy permissions
        - PolicyName: CodePipelineDeploy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Direct ECS Deploy (ecs:update-service)
              - !If 
                - IsDirectECS
                - Effect: Allow
                  Action:
                    - ecs:RegisterTaskDefinition
                    - ecs:UpdateService
                    - ecs:DescribeServices
                    - ecs:DescribeTaskDefinition
                    - ecs:DescribeTasks
                    - ecs:ListServices
                    - ecs:ListTasks
                    - ecs:DescribeClusters
                  Resource: "*"
                - !Ref AWS::NoValue

              # CodeDeploy ECS
              - !If
                - IsCodeDeployECS
                - Effect: Allow
                  Action:
                    - codedeploy:CreateDeployment
                    - codedeploy:GetDeployment
                    - codedeploy:RegisterApplicationRevision
                    - codedeploy:GetDeploymentGroup
                    - codedeploy:GetApplication   
                    - codedeploy:GetApplicationRevision  
                    - codedeploy:GetDeploymentConfig 
                    - codedeploy:ListApplications    
                    - codedeploy:ListDeploymentGroups 
                    - codedeploy:StopDeployment   
                    - ecs:RegisterTaskDefinition
                    - ecs:DescribeTaskDefinition
                    - ecs:UpdateService
                    - ecs:DescribeServices
                    - ecs:DescribeClusters
                  Resource: "*"
                - !Ref AWS::NoValue

              # Pass Role for ECS tasks
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt ECSTaskExecutionRole.Arn

  # ---------------------------
  # CodeBuild Role
  # ---------------------------
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*

        - PolicyName: CodeBuildS3Artifacts
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucketName}
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*

        - PolicyName: CodeBuildECSDeploy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RegisterTaskDefinition
                  - ecs:DescribeTaskDefinition
                  - ecs:UpdateService
                  - ecs:DescribeServices
                  - ecs:ListClusters
                  - ecs:ListServices
                Resource: "*"
              - Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt ECSTaskExecutionRole.Arn

  # ---------------------------
  # ECS Task Execution Role
  # ---------------------------
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  CodeDeployRole:
    Type: AWS::IAM::Role
    Condition: IsCodeDeployECS
    Properties:
      RoleName: !Sub "${AWS::StackName}-CodeDeployRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        # This provides baseline CodeDeploy permissions (mainly for EC2/On-Prem)
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Policies:
        - PolicyName: CodeDeployECSExtra
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # ECS actions needed for ECS Blue/Green deployments
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:UpdateService
                  - ecs:CreateTaskSet
                  - ecs:DeleteTaskSet
                  - ecs:DescribeTaskSets
                  - ecs:DescribeTasks
                  - ecs:ListServices
                  - ecs:ListTaskSets
                  - ecs:DescribeClusters
                  - ecs:UpdateServicePrimaryTaskSet
                Resource: "*"

              # ALB actions so CodeDeploy can switch traffic
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:ModifyListener
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:ModifyRule
                Resource: "*"

              # PassRole required for ECS tasks to use execution/task roles
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com


Conditions:
  IsDirectECS: !Equals [!Ref DeploymentType, DirectECS]
  IsCodeDeployECS: !Equals [!Ref DeploymentType, CodeDeployECS]

Outputs:
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
  ECSTaskExecutionRoleArn:
    Value: !GetAtt ECSTaskExecutionRole.Arn
  CodeDeployRoleArn:
    Condition: IsCodeDeployECS
    Value: !GetAtt CodeDeployRole.Arn
