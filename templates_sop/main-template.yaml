AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline with Build, Manual Approval, and Deploy using Artifact Bucket

Parameters:
  DBUsername:
    Type: String
    Default: admin
    Description: "Aurora master username"
  DatabaseName:
    Type: String
    Default: tododb
  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Existing EC2 KeyPair name for SSH access
  GitHubRepoBE:
    Type: String
    Description: GitHub repo name for BE
    Default: Jaymin-PCA240/BE-TODO
  GitHubBranchBE:
    Type: String
    Default: main
    Description: Branch to build for BE
  GitHubRepoFE:
    Type: String
    Description: GitHub repo name for FE
    Default: Jaymin-PCA240/FE-TODO
  GitHubBranchFE:
    Type: String
    Default: main
    Description: Branch to build for FE
  GitHubRepo:
    Type: String
    Description: GitHub repo name
    Default: Jaymin-PCA240/cloudformation-template
  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to build
  GitHubConnectionArn:
    Type: String
    Description: ARN of existing CodeStar GitHub connection
    Default: arn:aws:codeconnections:ap-south-1:127145910156:connection/1db5596b-8712-48b6-aad2-062695c51177
  AlarmEmail:
    Type: String
    Description: Email address to receive alarm notifications
  DatabaseType:
    Type: String
    Default: mysql
    AllowedValues:
      - mysql
      - aurora
    Description: "Choose which database to deploy: mysql or aurora"
  AppName:                    
    Type: String
    Default: todo
    Description: Application short name (used in naming convention)
  Environment:
    Type: String
    Default: dev
    Description: Environment tag (dev|staging|prod)
    AllowedValues:
      - dev
      - staging
      - prod

Resources:
  # S3 bucket for pipeline artifacts + nested templates
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-artifact-bucket"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName
    DeletionPolicy: Retain

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-stack-PipelineRole" 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-PipelineRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName
      Policies:
        - PolicyName: PipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource:
                  - !Sub "${ArtifactBucket.Arn}"
                  - !Sub "${ArtifactBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"
              - Sid: CodeStarConnection
                Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                  - codeconnections:UseConnection
                Resource: !Ref GitHubConnectionArn
              - Sid: AllowPassCFNExecutionRole
                Effect: Allow
                Action: iam:PassRole
                Resource: !GetAtt CloudFormationExecutionRole.Arn
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService: cloudformation.amazonaws.com

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-stack-CodeBuildRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-CodeBuildRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName
      Policies:
        - PolicyName: BuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource:
                  - !Sub "${ArtifactBucket.Arn}"
                  - !Sub "${ArtifactBucket.Arn}/*"
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-${Environment}-stack-CFNExecRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-CFNExecRole"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AppName}-${Environment}-stack-CodeBuildProject" 
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_BUCKET
            Value: !Ref ArtifactBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/buildspec.yml
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-CodeBuildProject"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AppName}-${Environment}-stack-Pipeline"
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${GitHubRepo}"
                BranchName: !Ref GitHubBranch

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject

        - Name: ManualApproval
          Actions:
            - Name: ApproveBeforeDeploy
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"

        - Name: Deploy
          Actions:
            - Name: CFNDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE 
                StackName: MyAppRoot
                TemplatePath: BuildArtifact::root-template-main.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn 
                ParameterOverrides: !Sub |
                  {
                    "ArtifactBucketName"   : "${ArtifactBucket}",
                    "DBUsername"           : "${DBUsername}",
                    "DatabaseName"         : "${DatabaseName}",
                    "EC2KeyPair"           : "${EC2KeyPair}",
                    "GitHubRepoBE"         : "${GitHubRepoBE}",
                    "GitHubBranchBE"       : "${GitHubBranchBE}",
                    "GitHubRepoFE"         : "${GitHubRepoFE}",
                    "GitHubBranchFE"       : "${GitHubBranchFE}",
                    "GitHubConnectionArn"  : "${GitHubConnectionArn}",
                    "AlarmEmail"           : "${AlarmEmail}",
                    "DatabaseType"         : "${DatabaseType}",
                    "AppName"              : "${AppName}"
                    "Environment"          : "${Environment}"
                  }
      Tags:                        
        - Key: Name
          Value: !Sub "${AppName}-${Environment}-stack-Pipeline"
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref AppName

Outputs:
  ArtifactBucketName:
    Value: !Ref ArtifactBucket
    Export:
      Name: ArtifactBucketName

  DBUsername:
    Value: !Ref DBUsername
    Export:
      Name: DBUsername

  DatabaseName:
    Value: !Ref DatabaseName
    Export:
      Name: DatabaseName

  EC2KeyPair:
    Value: !Ref EC2KeyPair
    Export:
      Name: EC2KeyPair

  GitHubRepoBE:
    Value: !Ref GitHubRepoBE
    Export:
      Name: GitHubRepoBE

  GitHubBranchBE:
    Value: !Ref GitHubBranchBE
    Export:
      Name: GitHubBranchBE

  GitHubRepoFE:
    Value: !Ref GitHubRepoFE
    Export:
      Name: GitHubRepoFE

  GitHubBranchFE:
    Value: !Ref GitHubBranchFE
    Export:
      Name: GitHubBranchFE

  GitHubConnectionArn:
    Value: !Ref GitHubConnectionArn
    Export:
      Name: GitHubConnectionArn

  AlarmEmail:
    Value: !Ref AlarmEmail
    Export:
      Name: AlarmEmail

  DatabaseType:
    Value: !Ref DatabaseType
    Export:
      Name: DatabaseType

  AppName:
    Value: !Ref AppName
    Export:
      Name: AppName

  Environment:
    Value: !Ref Environment
    Export:
      Name: Environment
